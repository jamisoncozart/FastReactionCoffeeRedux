{"version":3,"sources":["Components/Header/Header.js","Components/Body/Coffee/BrewButtons/BrewButtons.js","Components/Body/Coffee/Coffee.js","Components/Body/NewCoffeeForm/NewCoffeeForm.js","Components/Body/BrewDetails/BrewDetails.js","data/defaultCoffees.js","actions/index.js","actions/ActionTypes.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/App.js","serviceWorker.js","reducers/coffee-list-reducer.js","reducers/show-details-reducer.js","reducers/current-coffee-reducer.js","reducers/index.js","index.js"],"names":["Header","props","className","BrewButtons","onClick","handleRefillingCoffeeQuantity","id","quantity","handleDecrementingCoffeeQuantity","Coffee","handleShowCoffeeDetails","src","image","alt","name","NewCoffeeForm","onSubmit","event","preventDefault","onNewBrewCreation","v4","target","Name","value","description","Description","Image","placeholder","required","BrewDetails","handleBackToMainPage","coffeeList","addCoffee","newCoffee","type","Body","dispatch","useEffect","Object","values","defaultCoffees","forEach","coffee","a","currentBrew","masterCoffeeList","handleNewBrewCreation","newBrew","coffeeToDecrement","updatedCoffee","showDetailsPage","Fragment","currentCoffee","sortedCoffees","sort","b","textA","toUpperCase","textB","map","index","key","renderBody","connect","state","Footer","App","Boolean","window","location","hostname","match","coffeeListReducer","action","newState","showDetailsReducer","currentCoffeeReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2fae11a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h1>Fast Reaction Coffee</h1>\r\n      <h4>Taproom hosting local coffee brews from all over Oregon</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BrewButtons = props => {\r\n\r\n  function hideTapIfSoldOut() {\r\n    if(props.quantity <= 0) {\r\n      return;\r\n    } else {\r\n      return <button onClick={() => props.handleDecrementingCoffeeQuantity(props.id)}>Tap</button>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"BrewButtons\">\r\n      <button onClick={() => props.handleRefillingCoffeeQuantity(props.id)}>Refill</button>\r\n      <div className=\"BrewQuantity\">\r\n        <p className=\"BrewAmount\">{props.quantity}</p>\r\n        <p className=\"cups\">Cups</p>\r\n      </div>\r\n      {hideTapIfSoldOut()}\r\n    </div>\r\n  )\r\n}\r\n\r\nBrewButtons.propTypes = {\r\n  handleRefillingCoffeeQuantity: PropTypes.func,\r\n  quantity: PropTypes.number,\r\n  handleDecrementingCoffeeQuantity: PropTypes.func,\r\n  id: PropTypes.string\r\n}\r\n\r\nexport default BrewButtons;","import React from 'react';\r\nimport BrewButtons from './BrewButtons/BrewButtons';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Coffee = props => {\r\n  return (\r\n    <div className=\"Coffee\">\r\n      <div onClick={() => props.handleShowCoffeeDetails(props.id)} className=\"imgDiv\">\r\n        <img src={props.image} alt=\"Coffee Profile\" />\r\n      </div>\r\n      <div className=\"CoffeeInfo\">\r\n        <h3>{props.name}</h3>\r\n        <BrewButtons \r\n          handleDecrementingCoffeeQuantity={props.handleDecrementingCoffeeQuantity} \r\n          quantity={props.quantity}\r\n          handleRefillingCoffeeQuantity={props.handleRefillingCoffeeQuantity}\r\n          id={props.id} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCoffee.propTypes = {\r\n  handleShowCoffeeDetails: PropTypes.func,\r\n  id: PropTypes.string,\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  handleDecrementingCoffeeQuantity: PropTypes.func,\r\n  handleRefillingCoffeeQuantity: PropTypes.func\r\n}\r\n\r\nexport default Coffee;","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewCoffeeForm = props => {\r\n\r\n  function handleNewBrewSubmit(event) {\r\n    event.preventDefault();\r\n    props.onNewBrewCreation({\r\n      id: v4(),\r\n      name: event.target.Name.value,\r\n      description: event.target.Description.value,\r\n      image: event.target.Image.value,\r\n      quantity: 20\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleNewBrewSubmit} className=\"NewCoffeeForm\">\r\n      <h2>Add New Brew</h2>\r\n      <input placeholder=\"Brew Name\" name=\"Name\" required/>\r\n      <input placeholder=\"Description\" name=\"Description\" required/>\r\n      <input placeholder=\"Image URL\" name=\"Image\" />\r\n      <button>Add Brew</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nNewCoffeeForm.propTypes = {\r\n  onNewBrewCreation: PropTypes.func\r\n}\r\n\r\nexport default NewCoffeeForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BrewDetails = props => {\r\n  return (\r\n    <div className=\"BrewDetails\">\r\n      <div className=\"DetailsImageDiv\">\r\n        <img src={props.image} alt=\"Coffee Profile\" />\r\n      </div>\r\n      <h2>{props.name}</h2>\r\n      <p className=\"BrewDescription\">{props.description}</p>\r\n      <button onClick={props.handleBackToMainPage}>Back to Brews</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nBrewDetails.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  handleBackToMainPage: PropTypes.func\r\n}\r\n\r\nexport default BrewDetails;","const coffeeList = {\r\n  '1': {\r\n    id: \"1ce6c951-a2c4-4dac-863a-a6a2de0e02fb\",\r\n    name: \"Chai Cinnamon Latte\",\r\n    description: \"Creamy blend of Chai with suttle hints of cinnamon churned to perfection.\",\r\n    image: \"https://www.ohhowcivilized.com/wp-content/uploads/2013/01/0918-cha-tea-latte-16.jpg\",\r\n    quantity: 20\r\n  },\r\n  '2': {\r\n    id: \"558bae53-5d09-458c-b1a4-cbea0ba3bf01\",\r\n    name: \"Noggaccino\",\r\n    description: \"Smooth eggnog with hints of nutmeg and cinammon scattered throughout.\",\r\n    image: \"https://www.laweekly.com/wp-content/uploads/2019/05/xmascoffee_menottis.jpg\",\r\n    quantity: 20\r\n  },\r\n  '3': {\r\n    id: \"a2d348d3-7c3d-40c6-b0e1-b6248a885f99\",\r\n    name: \"Columbian Black\",\r\n    description: \"Earthy and hearty with a crispt taste of raw coffee.\",\r\n    image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTuyUYEfmi1zTzuT3huhXyHdh9Qnz0b0bIdvPI0TnfrTdi-KO6J&usqp=CAU\",\r\n    quantity: 20\r\n  },\r\n  '4': {\r\n    id: \"f38ade84-2035-4e91-90e0-7e0cccafb848\",\r\n    name: \"Iced Dark Roast\",\r\n    description: \"Cold and crisp with chocolatey undertones mixed with rich coffee.\",\r\n    image: \"https://www.tasteofhome.com/wp-content/uploads/2018/01/exps9452_SA1754024B03_22_1bC_WEB-1-696x696.jpg\",\r\n    quantity: 20\r\n  },\r\n  '5': {\r\n    id: \"c80f4400-0f81-4c57-a088-7147f64cb302\",\r\n    name: \"Caramel Vanilla frappuccino\",\r\n    description: \"Sticky Caramel mixed with a strong vanilla cream blended into medium roast.\",\r\n    image: \"https://www.happyfoodstube.com/wp-content/uploads/2019/07/iced-caramel-latte-picture-500x500.jpg\",\r\n    quantity: 20\r\n  },\r\n  '6': {\r\n    id: \"9de52891-05a6-4027-b555-78763b443cf8\",\r\n    name: \"Peppermint Hot Cocoa\",\r\n    description: \"Strong peppermint infused with a deep chocolate flavor.\",\r\n    image: \"https://food.fnr.sndimg.com/content/dam/images/food/fullset/2013/10/18/0/FNK_Peppermint-Hot-Cocoa_s4x3.jpg.rend.hgtvcom.616.462.suffix/1383787064560.jpeg\",\r\n    quantity: 20\r\n  }\r\n}\r\n\r\nexport default coffeeList;","import * as c from './ActionTypes';\r\n\r\nexport const addCoffee = newCoffee => {\r\n  return {\r\n    type: c.ADD_COFFEE,\r\n    ...newCoffee\r\n  }\r\n}\r\n\r\nexport const changeCurrentCoffee = newCoffee => {\r\n  return {\r\n    type: c.CHANGE_CURRENT_COFFEE,\r\n    ...newCoffee\r\n  }\r\n}\r\n\r\nexport const toggleDetails = () => {\r\n  return {\r\n    type: c.TOGGLE_DETAILS\r\n  }\r\n}","// coffeeListReducer Actions\r\nexport const ADD_COFFEE = 'ADD_COFFEE';\r\n// currentCoffeeReducer Actions\r\nexport const CHANGE_CURRENT_COFFEE = 'CHANGE_CURRENT_COFFEE';\r\n// showDetailsReducer Actions\r\nexport const TOGGLE_DETAILS = 'TOGGLE_DETAILS';","import React, { useEffect } from 'react';\r\nimport Coffee from './Coffee/Coffee';\r\nimport NewCoffeeForm from './NewCoffeeForm/NewCoffeeForm';\r\nimport BrewDetails from './BrewDetails/BrewDetails';\r\nimport defaultCoffees from '../../data/defaultCoffees';\r\nimport { connect } from 'react-redux';\r\nimport * as a from '../../actions/index';\r\n\r\nlet Body = props => {\r\n  const { dispatch } = props;\r\n  useEffect(() => {\r\n    const defaultCoffeeList = Object.values(defaultCoffees);\r\n    defaultCoffeeList.forEach(coffee => {\r\n      dispatch(a.addCoffee(coffee));\r\n    });\r\n  }, []);\r\n  const handleShowCoffeeDetails = (id) => {\r\n    let currentBrew = props.masterCoffeeList[id];\r\n    dispatch(a.changeCurrentCoffee(currentBrew));\r\n    dispatch(a.toggleDetails());\r\n  }\r\n\r\n  const handleBackToMainPage = () => {\r\n    dispatch(a.toggleDetails());\r\n  }\r\n\r\n  const handleNewBrewCreation = (newBrew) => {\r\n    dispatch(a.addCoffee(newBrew));\r\n  }\r\n\r\n  const handleDecrementingCoffeeQuantity = (id) => {\r\n    const coffeeToDecrement = props.masterCoffeeList[id];\r\n    const updatedCoffee = {...coffeeToDecrement, quantity: coffeeToDecrement.quantity-1};\r\n    dispatch(a.addCoffee(updatedCoffee));\r\n  }\r\n\r\n  const handleRefillingCoffeeQuantity = (id) => {\r\n    const coffeeToDecrement = props.masterCoffeeList[id];\r\n    const updatedCoffee = {...coffeeToDecrement, quantity: 20};\r\n    dispatch(a.addCoffee(updatedCoffee));\r\n  }\r\n\r\n  function renderBody() {\r\n    if(props.showDetailsPage) {\r\n      return (\r\n        <React.Fragment>\r\n          <BrewDetails \r\n            image={props.currentCoffee.image}\r\n            name={props.currentCoffee.name}\r\n            description={props.currentCoffee.description}\r\n            handleBackToMainPage={handleBackToMainPage}/>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      const sortedCoffees = Object.values(props.masterCoffeeList).sort(function(a, b) {\r\n        var textA = a.name.toUpperCase();\r\n        var textB = b.name.toUpperCase();\r\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n      });\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"Coffees\">\r\n            {sortedCoffees.map((coffee, index) => (\r\n              <Coffee \r\n                id={coffee.id}\r\n                name={coffee.name}\r\n                image={coffee.image}\r\n                quantity={coffee.quantity}\r\n                handleShowCoffeeDetails={handleShowCoffeeDetails}\r\n                handleDecrementingCoffeeQuantity={handleDecrementingCoffeeQuantity}\r\n                handleRefillingCoffeeQuantity={handleRefillingCoffeeQuantity}\r\n                key={index} />\r\n            ))}\r\n          </div>\r\n          <NewCoffeeForm onNewBrewCreation={handleNewBrewCreation}/>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      {renderBody()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    masterCoffeeList: state.masterCoffeeList,\r\n    showDetailsPage: state.showDetailsPage,\r\n    currentCoffee: state.currentCoffee\r\n  }\r\n}\r\n\r\nBody = connect(mapStateToProps)(Body);\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <div className=\"Footer\">\r\n      <p>&copy; 2020 - Jamison Cozart</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport Footer from './Footer/Footer';\r\nimport '../App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Body />\r\n      <Footer />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const coffeeListReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_COFFEE':\r\n      const { id, name, description, image, quantity } = action;\r\n      const newState = {\r\n        ...state,\r\n        [id]: {\r\n          id: id,\r\n          name: name,\r\n          description: description,\r\n          image: image,\r\n          quantity: quantity\r\n        }\r\n      }\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default coffeeListReducer;","const showDetailsReducer = (state = false, action) => {\r\n  switch(action.type) {\r\n    case 'TOGGLE_DETAILS':\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default showDetailsReducer;","const currentCoffeeReducer = (state = {}, action) => {\r\n  const { name, description, image, quantity } = action;\r\n  switch(action.type) {\r\n    case 'CHANGE_CURRENT_COFFEE':\r\n      const newState = {\r\n        name: name,\r\n        description: description,\r\n        image: image,\r\n        quantity: quantity\r\n      }\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentCoffeeReducer;","import coffeeListReducer from './coffee-list-reducer';\r\nimport showDetailsReducer from './show-details-reducer';\r\nimport currentCoffeeReducer from './current-coffee-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  masterCoffeeList: coffeeListReducer,\r\n  showDetailsPage: showDetailsReducer,\r\n  currentCoffee: currentCoffeeReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}